LIST P=PIC18F4321 F=INHX32
#include <p18f4321.inc>
    
CONFIG OSC=INTIO2
CONFIG PBADEN=DIG
CONFIG WDT=OFF
    
ORG 0x0000
GOTO MAIN
ORG 0x0008
GOTO HIGH_RSI
ORG 0x0018
RETFIE FAST

; Definim variables  
CONST_7SEG_HIGH  EQU  0x00
CONST_7SEG_MID   EQU  0x01
CONST_7SEG_LOW   EQU  0x02
CONST_7SEG_0	 EQU  0x03
MANUAL_MODE	 EQU  0x04
ContRebotsL	 EQU  0x05
ContRebotsH	 EQU  0x06 
TicsTMRH	 EQU  0x07
TicsTMRL	 EQU  0x08
	 
LOAD_TMR
  MOVLW HIGH(.61536)
  MOVWF TMR0H,0
  MOVLW LOW(.61536)
  MOVWF TMR0L,0  
  RETURN
  
HIGH_RSI
  BTFSS INTCON,TMR0IF,0
  RETFIE FAST
  BCF INTCON,TMR0IF,0
  CALL LOAD_TMR
  INCF TicsTMRL,1
  BTFSC STATUS,C,0
  INCF TicsTMRH,1
  MOVLW HIGH(.60000)
  SUBWF TicsTMRH,0
  BTFSS STATUS,Z,0
  RETFIE FAST
  MOVLW LOW(.60000)
  SUBWF TicsTMRL,0
  BTFSS STATUS,Z,0
  RETFIE FAST
  ; Aqui ha passat 1min
  BSF LATA,3,0
  RETURN

CHANGE_TO_MANUAL
  MOVLW .1
  MOVWF MANUAL_MODE
  BSF LATA,3,0
  GOTO ESPERA_FI

CHANGE_TO_CRUISE
  CLRF MANUAL_MODE
  BCF LATA,3,0
  GOTO ESPERA_FI  
    
CHANGE_MODE
  CALL COUNT_20ms
  BTFSS MANUAL_MODE,0
  GOTO CHANGE_TO_MANUAL
  GOTO CHANGE_TO_CRUISE
  ESPERA_FI
    BTFSS PORTB,0,0
    GOTO ESPERA_FI
  CALL COUNT_20ms
  RETURN
  
; Config OSC to have a F=16MHz
INIT_OSC
  MOVLW b'01100000'
  MOVWF OSCCON,0
  BSF OSCTUNE,PLLEN,0
  RETURN

INIT_PORTS
  CLRF TRISD,0
  BSF TRISA,0,0
  BSF TRISB,0,0
  BCF TRISA,3,0
  BCF INTCON2,RBPU,0
  RETURN
    
INIT_VARS
  MOVLW b'00110111'
  MOVWF CONST_7SEG_HIGH
  MOVLW b'01110101'
  MOVWF CONST_7SEG_MID
  MOVLW b'00001101'
  MOVWF CONST_7SEG_LOW
  MOVLW b'01111101'
  MOVWF CONST_7SEG_0
  MOVLW .1
  MOVWF MANUAL_MODE
  BCF LATA,3,0
  CLRF TicsTMRH
  CLRF TicsTMRL
  RETURN
    
INIT_ADC
  ;Analog OUT (AN0) and disable Vref
  MOVLW b'00001110'
  MOVWF ADCON1,0
  ;Clear ADCON2
  CLRF ADCON2,0
  ;Enable ADC and select Channel 0
  MOVLW b'00000001'
  MOVWF ADCON0,0
  RETURN
  
INIT_IRQS
  BCF RCON,IPEN,0
  MOVLW b'11000000'
  MOVWF INTCON,0
  RETURN
  
INIT_TMR
  MOVLW b'10001111'
  MOVWF T0CON,0
  BSF INTCON,TMR0IE,0
  RETURN
    
MAIN
  CALL INIT_OSC
  CALL INIT_PORTS
  CALL INIT_VARS
  CALL INIT_ADC
  CALL INIT_IRQS
  CALL INIT_TMR
  
LOOP
; Consult Polsador
BTFSS PORTB,0,0 
CALL CHANGE_MODE
; Consult Mode
BTFSS MANUAL_MODE,0
GOTO LOOP

;Ready to pick output
BSF ADCON0,GO_NOT_DONE,0

;Process output
WAIT_ADC
  BTFSC ADCON0,GO_NOT_DONE,0
  GOTO WAIT_ADC


;Get the output (in ADRESH)
;To use with 7 steps OUTPUT --> ADRESH range (different values) 
		     ;H (N) --> [0,38]	(39)
		     ;M (N) --> [39,77]     (39)
		     ;L (N) --> [78, 116]   (39)
		     ;0 --> [117,138]	(22)
		     ;L (P) --> [139, 177]  (39)
		     ;M (P) --> [178,216]   (39)
		     ;H (P) --> [217,255]   (39)
; Divide in two parts to use the Negative bit of the STATUS without sobrepassing the CA2 limit
MOVLW .139
SUBWF ADRESH,0,0
BTFSC STATUS,N,0
GOTO CHECK_LOW
GOTO CHECK_HIGH 

CHECK_LOW
MOVLW .39
SUBWF ADRESH,0,0
BTFSC STATUS,N,0
GOTO VEL_HIGH_7Seg
MOVLW .78
SUBWF ADRESH,0,0
BTFSC STATUS,N,0
GOTO VEL_MID_7Seg
MOVLW .117
SUBWF ADRESH,0,0
BTFSC STATUS,N,0
GOTO VEL_LOW_7Seg
MOVLW .139
GOTO VEL_0_7Seg

CHECK_HIGH
MOVLW .178
SUBWF ADRESH,0,0
BTFSC STATUS,N,0
GOTO VEL_LOW_7Seg 
MOVLW .217
SUBWF ADRESH,0,0
BTFSC STATUS,N,0
GOTO VEL_MID_7Seg 
GOTO VEL_HIGH_7Seg


VEL_HIGH_7Seg
  MOVFF CONST_7SEG_HIGH,LATD
  GOTO LOOP

VEL_MID_7Seg
  MOVFF CONST_7SEG_MID,LATD
  GOTO LOOP

VEL_LOW_7Seg
  MOVFF CONST_7SEG_LOW,LATD
  GOTO LOOP

VEL_0_7Seg
  MOVFF CONST_7SEG_0,LATD
  GOTO LOOP
  
; TTarget = 20ms | Tinst = 250ns --> #inst = 80.000 - 4 = 79996
COUNT_20ms
  MOVLW .1 ;x
  MOVWF ContRebotsL
  MOVLW .178 ;y = 256 - 49 = 207
  MOVWF ContRebotsH
  T_REBOTS
    INCF ContRebotsL,1
    BTFSS STATUS,C,0
    GOTO T_REBOTS
    MOVLW .1
    MOVWF ContRebotsL
    INCF ContRebotsH,1
    BTFSS STATUS,C,0
    GOTO T_REBOTS
  RETURN
	
END